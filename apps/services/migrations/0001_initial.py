# Generated by Django 4.2.7 on 2025-06-21 19:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(unique=True)),
                (
                    "short_description",
                    models.TextField(
                        help_text="Brief description for cards", max_length=300
                    ),
                ),
                (
                    "detailed_description",
                    models.TextField(help_text="Full service description"),
                ),
                (
                    "icon",
                    models.CharField(help_text="Emoji or icon class", max_length=50),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("high", "High Priority"),
                            ("medium", "Medium Priority"),
                            ("low", "Low Priority"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "price_range",
                    models.CharField(
                        blank=True,
                        help_text="e.g., 'KES 500K - 2M' or 'Contact for quote'",
                        max_length=100,
                    ),
                ),
                (
                    "duration_range",
                    models.CharField(
                        blank=True,
                        help_text="e.g., '2-6 months' or 'Project dependent'",
                        max_length=100,
                    ),
                ),
                ("overview", models.TextField(help_text="Service overview section")),
                (
                    "key_features",
                    models.JSONField(default=list, help_text="List of key features"),
                ),
                (
                    "deliverables",
                    models.JSONField(default=list, help_text="List of deliverables"),
                ),
                (
                    "process_steps",
                    models.JSONField(default=list, help_text="Process steps"),
                ),
                (
                    "technologies",
                    models.JSONField(default=list, help_text="Technologies used"),
                ),
                ("meta_title", models.CharField(blank=True, max_length=200)),
                ("meta_description", models.CharField(blank=True, max_length=300)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ServiceCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField()),
                (
                    "icon",
                    models.CharField(help_text="Emoji or icon class", max_length=50),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Service Categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ServiceTestimonial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_name", models.CharField(max_length=200)),
                ("client_title", models.CharField(max_length=200)),
                ("client_organization", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "rating",
                    models.PositiveIntegerField(default=5, help_text="Rating out of 5"),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="testimonials",
                        to="services.service",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ServiceInquiry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("organization", models.CharField(blank=True, max_length=200)),
                ("project_description", models.TextField()),
                (
                    "budget_range",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("under_500k", "Under KES 500,000"),
                            ("500k_1m", "KES 500,000 - 1,000,000"),
                            ("1m_5m", "KES 1,000,000 - 5,000,000"),
                            ("5m_10m", "KES 5,000,000 - 10,000,000"),
                            ("over_10m", "Over KES 10,000,000"),
                            ("discuss", "Prefer to discuss"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "timeline",
                    models.CharField(
                        blank=True, help_text="Expected timeline", max_length=200
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, help_text="Project location", max_length=200
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("in_progress", "In Progress"),
                            ("quoted", "Quoted"),
                            ("won", "Won"),
                            ("lost", "Lost"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="Internal notes")),
                (
                    "quoted_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inquiries",
                        to="services.service",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Service Inquiries",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ServiceFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="features",
                        to="services.service",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "title"],
            },
        ),
        migrations.CreateModel(
            name="ServiceFAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=300)),
                ("answer", models.TextField()),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="faqs",
                        to="services.service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service FAQ",
                "verbose_name_plural": "Service FAQs",
                "ordering": ["order", "question"],
            },
        ),
        migrations.CreateModel(
            name="ServiceCaseStudy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(unique=True)),
                ("client", models.CharField(max_length=200)),
                ("project_duration", models.CharField(max_length=100)),
                ("project_value", models.CharField(blank=True, max_length=100)),
                ("challenge", models.TextField(help_text="Project challenge")),
                ("solution", models.TextField(help_text="Our solution")),
                ("results", models.TextField(help_text="Project results")),
                (
                    "metrics",
                    models.JSONField(default=dict, help_text="Key metrics as JSON"),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="case_studies",
                        to="services.service",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Service Case Studies",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ServiceBenefit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="benefits",
                        to="services.service",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "title"],
            },
        ),
        migrations.AddField(
            model_name="service",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="services",
                to="services.servicecategory",
            ),
        ),
    ]
